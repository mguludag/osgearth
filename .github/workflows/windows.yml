name: windows-x64-Release

on: [push, pull_request, workflow_dispatch]

env:
  VCPKG_BINARY_SOURCES : 'clear;nuget,GitHub,readwrite'
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VCPKG_VERSION: 'bb584d35bba70ca9f1ecaf09ad96ce5d1ff946f8'

jobs:

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['windows-2019']
        include:
          - os: 'windows-2019'
            triplet: 'x64-windows'
            mono: ''
            VCPKG_WORKSPACE: 'c:/vcpkg_own'

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Installing vcpkg (windows)
      shell: 'bash'
      run: |
        cmake -E make_directory ${{ matrix.VCPKG_WORKSPACE }}
        cd ${{ matrix.VCPKG_WORKSPACE }}
        # git clone --depth 1 --branch ${{env.VCPKG_VERSION}} https://github.com/microsoft/vcpkg
        git clone https://github.com/microsoft/vcpkg
        cd vcpkg
        git checkout ${{env.VCPKG_VERSION}}
        cd ..
        ./vcpkg/bootstrap-vcpkg.bat -disableMetrics
        ${{ matrix.VCPKG_WORKSPACE }}/vcpkg/vcpkg version

    - name: 'Setup NuGet Credentials'
      working-directory: ${{ matrix.VCPKG_WORKSPACE }}
      shell: 'bash'
      run: >
        ${{ matrix.mono }} `./vcpkg/vcpkg fetch nuget | tail -n 1`
        sources add
        -source "https://nuget.pkg.github.com/gwaldron/index.json"
        -storepasswordincleartext
        -name "GitHub"
        -username "gwaldron"
        -password "${{ secrets.GITHUB_TOKEN }}"
        
 #   - name: Download 7z4ps
 #     working-directory: ${{ runner.workspace }}
 #     run: Save-Module -Name 7Zip4Powershell -Path ${{ runner.workspace }} | $ver = Get-ChildItem -Path ${{ runner.workspace }}/7Zip4Powershell/ -Name | Import-Module ${{ runner.workspace }}/7Zip4Powershell/$ver/7Zip4PowerShell.psd1

    - name: Create Build Environment
      run: |
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{ runner.workspace }}/build
      run: cmake $GITHUB_WORKSPACE -DWIN32_USE_MP=ON -DOSGEARTH_BUILD_LEGACY_SPLAT_NODEKIT=ON -DCMAKE_INSTALL_PREFIX=./osgearth_msvc64 -DOSGEARTH_BUILD_PROCEDURAL_NODEKIT=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=${{ matrix.VCPKG_WORKSPACE }}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: 'Upload cmake configure log artifact'
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: cmake-log
        path: |
          ${{ runner.workspace }}/build/CMakeCache.txt
        retention-days: 1

    - name: Build
      working-directory: ${{ runner.workspace }}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
      
    - name: Install
      working-directory: ${{ runner.workspace }}
      shell: bash
      run: cmake --build build --target INSTALL --config $BUILD_TYPE
      
    - name: mkdir bin
      working-directory: ${{ runner.workspace }}
      run: New-Item -Path '${{ runner.workspace }}/build/osgearth_msvc64/deps/bin' -ItemType Directory
      
    - name: mkdir lib
      working-directory: ${{ runner.workspace }}
      run: New-Item -Path '${{ runner.workspace }}/build/osgearth_msvc64/deps/lib' -ItemType Directory
      
    - name: mkdir inc
      working-directory: ${{ runner.workspace }}
      run: New-Item -Path '${{ runner.workspace }}/build/osgearth_msvc64/deps/include' -ItemType Directory
      
    - name: mkdir tools
      working-directory: ${{ runner.workspace }}
      run: New-Item -Path '${{ runner.workspace }}/build/osgearth_msvc64/deps/tools' -ItemType Directory
      
    - name: mkdir share
      working-directory: ${{ runner.workspace }}
      run: New-Item -Path '${{ runner.workspace }}/build/osgearth_msvc64/deps/share' -ItemType Directory
      
    - name: mkdir data
      working-directory: ${{ runner.workspace }}
      run: New-Item -Path '${{ runner.workspace }}/build/osgearth_msvc64/data' -ItemType Directory
      
    - name: Copy dependencies (dll)
      working-directory: ${{ runner.workspace }}
      run: Copy-Item -Path "${{ runner.workspace }}/build/vcpkg_installed/x64-windows/bin/*.dll" -Destination "${{ runner.workspace }}/build/osgearth_msvc64/deps/bin" -Recurse -Force
      
    - name: Copy dependencies (lib)
      working-directory: ${{ runner.workspace }}
      run: Copy-Item -Path "${{ runner.workspace }}/build/vcpkg_installed/x64-windows/lib/*" -Destination "${{ runner.workspace }}/build/osgearth_msvc64/deps/lib" -Recurse -Force
      
    - name: Copy dependencies (inc)
      working-directory: ${{ runner.workspace }}
      run: Copy-Item -Path "${{ runner.workspace }}/build/vcpkg_installed/x64-windows/include/*" -Destination "${{ runner.workspace }}/build/osgearth_msvc64/deps/include" -Recurse -Force
      
    - name: Copy dependencies (tools)
      working-directory: ${{ runner.workspace }}
      run: Copy-Item -Path "${{ runner.workspace }}/build/vcpkg_installed/x64-windows/tools/*" -Destination "${{ runner.workspace }}/build/osgearth_msvc64/deps/tools" -Recurse -Force
      
    - name: Copy dependencies (share)
      working-directory: ${{ runner.workspace }}
      run: Copy-Item -Path "${{ runner.workspace }}/build/vcpkg_installed/x64-windows/share/*" -Destination "${{ runner.workspace }}/build/osgearth_msvc64/deps/share" -Recurse -Force
      
    - name: Copy dependencies (data)
      working-directory: ${{ runner.workspace }}
      run: Copy-Item -Path "${{ runner.workspace }}/osgearth/data/*" -Destination "${{ runner.workspace }}/build/osgearth_msvc64/data" -Recurse -Force
      
#    - uses: actions/checkout@v2
#    - uses: vimtor/action-zip@v1
#    - name: Compress articraft
#      working-directory: ${{ runner.workspace }}
#      run: Compress-7Zip -Path ${{ runner.workspace }}/osgearth -ArchiveFileName osg64.7z #Compress-Archive -Path ${{ runner.workspace }}/* -DestinationPath ${{ runner.workspace }}/osg64.zip -CompressionLevel "NoCompression" 
        
        
    - uses: actions/upload-artifact@v2
      with:
        name: osgearth-win64
        path: |
          ${{ runner.workspace }}/build/osgearth_msvc64/
        retention-days: 3
      
    
